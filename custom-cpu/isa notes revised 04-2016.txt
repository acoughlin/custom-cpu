4 8 bit Registers:
00	RA										and an 8 bit PC			
01	RB																																											
10	RC																																														
11	RD																																					

---- the loop we need to execute--- 																																				char x, n, i;
n=5;

x=0;
for (i=0; i!=n; i++)
	x=x+i;		//at the end, x = 1+2+3+4+5 = 15 (or hex 0f)
while(true);		//program halts here

----my ISA---
0000	ADD 	RA,RB			Add RA+RB
0001	SUB 	RB,RA			Subtract RB-RA, value goes to RB
0010	LOAD 	RA,RC			Load into RA from address in RC
0011	PUT		R,mem			Put data from RB to mem.add comes later
0100	JMPG	RB,RD			Jump to address in RD if B isn't 0
0101	PUTP	R,mem			Put data from RB, adding the value of RB to current mem value(aka adding the values)
		
----my program----			
PROGRAM:							HEX		SPLIT4	SPLIT2
LOAD 	RA			00100000		20			0		0
00000001			00000001		1			2		0
LOAD 	RB			00100100		24			0		0
00000101			00000101		5			2		1
LOAD 	RC			00101000		28			0		1
10100000			10100000		A0			2		2	<---//address of X
LOAD 	RD			00101100		2C			a		0
00001000			00001000		8			2		3	<---//address of PUTP instruction 
PUTP 	RB,RC		01010110		56			0		2		//aka where we loop back to
SUB 	RB,RA		00010100		14			5		1
JMPG 	RB,RD		01000111		47			1		1
												4		1

---example program (do not use)----
HIS(DONT USE)
	ADD		RA, RB			add registers RA+RB, store result in RA
	SUB		RA, RB			subtract registers RA-RB, store result in RA
	LOAD	RA, [RB]		load 1 byte from memory at address in RB into RA
	STORE 	RA, [RB]		store 1 byte from RA into memory at address in RB
	LI		RA, IMM			2 byte instruction: load the second instruction byte into RA
	JMPZ	RA, RB			jump to address in RB only if RA contains zero

	
